uniform sampler2D SCREEN_TEXTURE;

const highp float range = 0.025; // Length of glow streaks
const highp float steps = 0.001; // Texture samples
const highp float threshold = 0.7; // Color key threshold (0-1)

void fragment() {

    highp vec4 col = texture(SCREEN_TEXTURE, UV);
    highp float falloff = 0.0;

    highp vec4 blur = vec4(0.0);
    for (float i = -range; i < range; i += steps) {

        falloff = 1.0 - abs(i / range);

        blur = texture(SCREEN_TEXTURE, UV + vec2(i,i));
        col = max(col, max(vec4(0.0,0.0,0.0,1.0),blur-vec4(threshold,threshold,threshold,0.0)) * falloff*falloff*falloff);

        blur = texture(SCREEN_TEXTURE, UV + vec2(i, -i));
        col = max(col, max(vec4(0.0,0.0,0.0,1.0),blur-vec4(threshold,threshold,threshold,0.0)) * falloff*falloff*falloff);

        blur = texture(SCREEN_TEXTURE, UV + vec2(0, i*2.0));
        col = max(col, max(vec4(0.0,0.0,0.0,1.0),blur-vec4(threshold,threshold,threshold,0.0)) * falloff*falloff*falloff);

        blur = texture(SCREEN_TEXTURE, UV + vec2(i*2.0, 0));
        col = max(col, max(vec4(0.0,0.0,0.0,1.0),blur-vec4(threshold,threshold,threshold,0.0)) * falloff*falloff*falloff);
    }

    COLOR += vec4(vec3(col)*3.0,(col.r+col.g+col.b)/3.0);

}
